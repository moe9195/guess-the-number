{"version":3,"sources":["HighScoreModal.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["formatTime","ms","HighScoreModal","props","React","useState","show","setShow","highscores","easy","map","score","className","size","color","hard","insane","onClick","Modal","onHide","centered","Header","closeButton","align","Title","id","Body","Store","points","upgrades","barUpgrade","buyHelperBar","helperBar","icon","faGem","evenOrOddUpgrade","buyEvenOdd","evenOdd","AwesomeSurprise","href","randomNumFromRange","min","max","Math","floor","random","App","state","value","secretNum","guessHistory","difficulty","numberOfGuesses","time","isOn","start","Array","fill","storePoints","surprise","handleChange","bind","handleSubmit","startTimer","stopTimer","resetTimer","this","alert","setState","round","Date","now","timer","setInterval","clearInterval","randNum","guessesNum","level","event","target","guessedNum","numGuesses","guessNum","unshift","timeToWin","pointsAwarded","pointsSaved","push","sort","length","pop","newGame","parseInt","temp","preventDefault","historyList","num","src","process","getHelperImage","alt","style","getEvenOdd","type","role","aria-label","changeDifficulty","onSubmit","onChange","makeGuess","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3b9ba8e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Modal from 'react-bootstrap/Modal'\n\nfunction formatTime(ms) {\n    if (ms) {\n        return (ms/1000)\n    }\n    return ms\n    \n  }\n\nfunction HighScoreModal(props) {\n    const [show, setShow] = React.useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    let highscores = props.highscores\n\n    const easy = highscores.easy.map(score =>\n        <tr className=\"table table-dark text-center\">\n          <td><font size=\"4\" color=\"black\">{formatTime(score)}</font></td>\n        </tr>\n        );\n\n    const hard = highscores.hard.map(score =>\n        <tr className=\"table table-dark text-center\">\n            <td><font size=\"4\" color=\"black\">{formatTime(score)}</font></td>\n        </tr>\n        );\n\n    const insane = highscores.insane.map(score =>\n        <tr className=\"table table-dark text-center\">\n            <td><font size=\"4\" color=\"black\">{formatTime(score)}</font></td>\n        </tr>\n        );\n\n\n    return (\n      <>\n        <button onClick={handleShow} className=\"btn btn-outline-light btn-lg\">Highscores</button> &nbsp; &nbsp;\n  \n        <Modal show={show} onHide={handleClose} size=\"lg\" centered>\n          <Modal.Header closeButton>\n          <div className=\"card-body\" align=\"center\">\n            <Modal.Title id=\"contained-modal-title-vcenter\"><h3>Highscores</h3></Modal.Title>\n          </div>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <table className=\"table table-dark text-center\">\n                            <thead>\n                                <tr>Easy</tr>\n                            </thead>\n                            <tbody>\n                                 {easy}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"col-sm\">\n                    <table className=\"table table-dark text-center\">\n                            <thead>\n                                <tr>Hard</tr>\n                            </thead>\n                            <tbody>\n                                 {hard}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"col-sm\">\n                    <table className=\"table table-dark text-center\">\n                            <thead>\n                                <tr>Insane</tr>\n                            </thead>\n                            <tbody>\n                                 {insane}\n                            </tbody>\n                        </table>\n                    </div>\n               </div>\n            </div>\n          </Modal.Body>\n\n        </Modal>\n      </>\n    );\n  }\n  \n\n  export default HighScoreModal;","import React from 'react';\nimport './App.css';\nimport Modal from 'react-bootstrap/Modal'\nimport { faGem } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction Store(props) {\n    const [show, setShow] = React.useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let points = props.points\n    let upgrades = props.upgrades\n\n\n\n\n    let barUpgrade = <div className=\"row\">\n        <div className=\"col-sm\">\n        Colorbar <br/> <font size=\"1\">display approximate location of number</font> \n        </div>\n        <div className=\"col-sm\">\n            <button className = \"btn btn-outline-dark btn \" onClick={() => props.buyHelperBar()}>{upgrades.helperBar == true ? \"Bought\": <h6><FontAwesomeIcon icon={faGem}/><h6>1000</h6></h6>}</button>\n        </div></div>\n\n    let evenOrOddUpgrade = <div className=\"row\">\n        <div className=\"col-sm\">\n        Even or Odd <br/> <font size=\"1\">tells you if number is even or odd</font> \n        </div>\n        <div className=\"col-sm\">\n            <button className = \"btn btn-outline-dark btn \" onClick={() => props.buyEvenOdd()}>{upgrades.evenOdd == true ? \"Bought\": <h6><FontAwesomeIcon icon={faGem}/><h6>5000</h6></h6>}</button>\n        </div></div>\n\n    let AwesomeSurprise = <div className=\"row\">\n        <div className=\"col-sm\">\n        Awesome Surprise <br/> <font size=\"1\">click for an awesome surprise!</font> \n        </div>\n        <div className=\"col-sm\">\n            <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" className = \"btn btn-outline-dark btn\"><FontAwesomeIcon icon={faGem}/><h6>9999</h6></a>\n        </div></div>\n        \n\n\n    return (\n      <>\n        <button onClick={handleShow} className=\"btn btn-outline-light btn-lg\">{points} &nbsp; <FontAwesomeIcon icon={faGem}/> </button> &nbsp; &nbsp;\n  \n        <Modal show={show} onHide={handleClose} size=\"lg\" centered>\n          <Modal.Header closeButton>\n          <div className=\"card-body\" align=\"center\">\n            <Modal.Title id=\"contained-modal-title-vcenter\"><h3>Store</h3></Modal.Title>\n          </div>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"container text-center\">\n\n            {barUpgrade}\n            <br/>\n            {evenOrOddUpgrade}\n            <br/>\n            {AwesomeSurprise}\n\n             </div>\n          </Modal.Body>\n\n        </Modal>\n      </>\n    );\n  }\n  \n\n  export default Store;","import React, {Component} from 'react';\nimport './App.css';\nimport HighScoreModal from './HighScoreModal.js'\nimport Store from './Store.js'\n\n// Easy difficulty could be done in 4 or less steps\n// Hard difficulty could be done in 7 or less steps\n// Insane difficulty could be done in 20 or less steps\n\nconst randomNumFromRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min)+\"\";\n }\n\nfunction formatTime(ms) {\n  return Math.round(ms/1000)\n}\n\nclass App extends Component { \n\n  constructor(props) {\n    super(props);\n    this.state = {value: '',\n                  secretNum: randomNumFromRange(1, 10),\n                  guessHistory: [],\n                  difficulty: 10,\n                  numberOfGuesses: 0,\n                  time: 0,\n                  isOn: false,\n                  start: 0,\n                  highscores: {\n                    easy: Array(5).fill(),\n                    hard: Array(5).fill(),\n                    insane: Array(5).fill(),\n                   },\n                  storePoints: 0,\n                  upgrades: {\n                    helperBar: false,\n                    surprise: false,\n                    evenOdd: false,\n                  }\n                };\n                  \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.buyHelperBar = this.buyHelperBar.bind(this);\n    this.buyEvenOdd = this.buyEvenOdd.bind(this);\n  }\n\n  buyHelperBar() {\n    let points = this.state.storePoints;\n      if (points < 1000){\n        alert(\"Not enough gems!\")\n    }\n      else if (!this.state.upgrades.helperBar && points >= 1000){\n        let upgrades = this.state.upgrades\n        upgrades.helperBar = true\n        this.setState({upgrades: upgrades, storePoints: points-1000})\n    }\n  }\n\n  buyEvenOdd() {\n    let points = this.state.storePoints;\n      if (points < 5000){\n        alert(\"Not enough gems!\")\n    }\n      else if (!this.state.upgrades.evenOdd && points >= 5000){\n        let upgrades = this.state.upgrades\n        upgrades.evenOdd = true\n        this.setState({upgrades: upgrades, storePoints: points-5000})\n    }\n  }\n\n  getHelperImage () {\n    let secretNum = this.state.secretNum\n    if (this.state.difficulty === 10) {\n      secretNum = Math.round(10*secretNum)\n    } else if (this.state.difficulty === 1000000) {\n      secretNum = Math.round(secretNum/10000)\n    }\n    if (this.state.upgrades.helperBar[1]){\n      return `${secretNum}(upgraded).png`\n    } else {\n      return `${secretNum}.png`\n    }\n  }\n\n  getEvenOdd() {\n    if (this.state.secretNum % 2 === 0){\n      return \"The number is even\"\n    } else {\n      return \"The number is odd\"\n    }\n  }\n\n  startTimer() {\n        this.setState({\n            isOn: true,\n            time: this.state.time,\n            start: Date.now() - this.state.time}\n        )\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - this.state.start\n        }), 1);\n\n    }\n\n\n  stopTimer() {\n    this.setState({isOn: false})\n    clearInterval(this.timer)\n  };\n\n  resetTimer() {\n    this.setState({time: 0, isOn: false})\n  };\n\n  newGame() {\n    let randNum = randomNumFromRange(1, 10);\n    this.stopTimer();\n    this.resetTimer();\n    this.setState({\n      secretNum: randNum, difficulty: 10, isOn: false,\n      guessesNum: 0, guessHistory: [], numberOfGuesses: 0,\n      });\n  }\n\n  changeDifficulty(level) {\n    let randNum = randomNumFromRange(1, level);\n    this.setState({difficulty: level, secretNum: randNum, guessHistory:[]})\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  makeGuess() {\n    this.setState({guessedNum: this.state.value})\n  }\n\n  handleSubmit(event) {\n    let numGuesses = this.state.numberOfGuesses;\n    let guessNum = this.state.guessHistory.unshift([this.state.guessedNum, null]);\n    this.setState({guessHistory: guessNum, numberOfGuesses: numGuesses + 1})\n    if (!this.state.isOn){\n      this.startTimer()\n    }\n\n    if (this.state.guessedNum === this.state.secretNum) {\n\n      let timeToWin = this.state.time;\n      let highscores = this.state.highscores\n      let pointsAwarded = ((this.state.difficulty**0.5)*(1000/(this.state.time+1000)))\n      let pointsSaved = this.state.storePoints\n      if (this.state.difficulty === 10){\n        this.setState({storePoints: pointsSaved+(10*Math.round(10*pointsAwarded))})\n        highscores.easy.push(timeToWin)\n        highscores.easy.sort()  \n        if (highscores.easy.length > 5){\n          highscores.easy.pop()\n        }\n        this.setState({highscores: highscores})\n      } else if (this.state.difficulty === 100){\n        this.setState({storePoints: pointsSaved+(10*Math.round(20*pointsAwarded))})\n        highscores.hard.push(timeToWin)\n        highscores.hard.sort()\n        if (highscores.hard.length > 5){\n          highscores.hard.pop()\n        }\n        this.setState({highscores: highscores})\n      } else {\n        this.setState({storePoints: pointsSaved+(10*Math.round(pointsAwarded))})\n        highscores.insane.push(timeToWin)\n        highscores.insane.sort()\n        if (highscores.insane.length > 5){\n          highscores.insane.pop()\n        }\n        this.setState({highscores: highscores})\n      }\n\n      alert(`Number guessed correctly! You win!\\nIt took you ${this.state.numberOfGuesses} tries.`);\n      this.stopTimer();\n      this.resetTimer();\n      this.newGame();\n    } else if (parseInt(this.state.guessedNum, 10) < parseInt(this.state.secretNum, 10)) {\n      let temp = this.state.guessHistory;\n      temp[0][1] = 0;\n      this.setState({guessHistory: temp})\n    } else if (parseInt(this.state.guessedNum, 10) > parseInt(this.state.secretNum, 10)){\n      let temp = this.state.guessHistory;\n      temp[0][1] = 1;\n      this.setState({guessHistory: temp})\n    }\n    event.preventDefault();\n  }\n\n  \n  render() {\n\n    const historyList = this.state.guessHistory.map(num =>\n      <tr className={num[1] == 1 ? \"table-warning\" : \"table-primary\"}>\n        <td>{num[0]}{num[1] == 1 ? \"   (Too High!)\" : \"   (Too Low!)\"}</td>\n      </tr>\n      );\n\n    let helperBar = <img src={process.env.PUBLIC_URL + this.getHelperImage()} alt=\"helper\" />\n    let evenOdd = <h4 style={{color:'white'}} >{this.getEvenOdd()}</h4>\n\n    return (\n      <div className=\"App\">\n\n      <div className=\"fixed-top\">\n        <br/>\n        <h3 style={{color:'white'}}> &nbsp; &nbsp; {(formatTime(this.state.time))}</h3>\n      </div>\n\n      <div className=\"fixed-top text-right\">\n\n      <br/>\n      \n      <HighScoreModal highscores={this.state.highscores}></HighScoreModal>\n      <Store points={this.state.storePoints} upgrades={this.state.upgrades} buyHelperBar={this.buyHelperBar} buyEvenOdd={this.buyEvenOdd}></Store>\n\n      </div>\n\n\n        <div className=\"card-body\" align=\"center\">\n        <br/>\n\n          <h1 style={{color:'white'}}><br/>Guess The Number</h1> \n          <h6 style={{color:'white'}}>\n            The computer selected a random number. <br/>\n            Try to guess it. <br/><br/>\n            Easy: the number is in the range 1-10<br/>\n            Hard: the number is in the range 1-100<br/>\n            Insane: the number is in the range 1-1000000<br/>\n          </h6>\n          <div>\n          <br/>\n          <button type=\"button\" onClick={() => this.newGame()} className=\"btn btn-outline-light btn-lg\">New Game</button> \n        </div>\n        <br/>\n\n        \n    \n        <br/>\n          <h6 style={{color:'white'}}>Difficulty Level</h6>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Difficulty Level\">\n            <button type=\"button\" className={this.state.difficulty === 10 ? \"btn btn-outline-light btn-lg active\" : \"btn btn-outline-light btn-lg\"} onClick={() => this.changeDifficulty(10)}>Easy</button> \n            <button type=\"button\" className={this.state.difficulty === 100 ? \"btn btn-outline-light btn-lg active\" : \"btn btn-outline-light btn-lg\"} onClick={() => this.changeDifficulty(100)}>Hard</button> \n            <button type=\"button\" className={this.state.difficulty === 1000000 ? \"btn btn-outline-light btn-lg active\" : \"btn btn-outline-light btn-lg\"} onClick={() => this.changeDifficulty(1000000)}>Insane</button>\n          </div>\n\n          <br/>\n\n        <div>\n          <br/>\n          <form onSubmit={this.handleSubmit}>\n              <label>\n\n              <input type=\"number\" className = \"form-control\" min=\"1\" max={this.state.difficulty} value={this.state.value}  onChange={this.handleChange}/>\n              \n        <br></br>\n                <input type=\"submit\" className = \"btn btn-outline-light mb-1\" value=\"Make a Guess\" onClick={() => this.makeGuess()}/>\n                </label>  \n           \n          </form>\n        </div>\n\n        {this.state.upgrades.helperBar == true ? helperBar : \"\"}\n        {this.state.upgrades.evenOdd == true ? evenOdd : \"\"}\n        \n        <br/>\n      \n        <table className=\"table table-striped text-center\">\n          <thead>\n            <tr style={{color:'white'}}>Previous Guesses</tr>\n          </thead>\n          <tbody>\n          {historyList}\n          </tbody>\n        </table>\n        \n\n      </div>\n    </div>\n\n    )\n  }\n  \n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}